{"version":3,"sources":["webpack:///webpack/bootstrap f9b98c6a29c6f3bc0a6c","webpack:///./lib/game.js","webpack:///./lib/missile.js","webpack:///./lib/cannon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iFAA+B,WAAW;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f9b98c6a29c6f3bc0a6c","import Missile from './missile';\nimport Cannon from './cannon';\n// Set up onClick event to the draw circle function.\nclass Game {\n  constructor() {\n    this.canvas = document.getElementById('myCanvas');\n    this.mouseClickHandler = this.mouseClickHandler.bind(this);\n    this.canvas.onclick = this.mouseClickHandler;\n    this.ctx = this.canvas.getContext('2d');\n    this.render = this.render.bind(this);\n    this.loop = this.loop.bind(this);\n    this.missiles = [];\n    this.cannons = [];\n    this.run();\n  }\n\n\n  mouseClickHandler(e) {\n    console.log('this works');\n    let x = e.clientX - this.canvas.offsetLeft;\n    let y = e.clientY;\n    let missile = new Missile({x: x, y: y});\n\n    console.log(this.missiles);\n    this.missiles.push(missile);\n  }\n\n  run() {\n    let cannon = new Cannon(this.canvas);\n    this.cannons.push(cannon);\n    this.cannons.push(new Cannon(this.canvas));\n    // let missile = new Missile;\n    // this.missiles.push(missile);\n\n    this.loop();\n  }\n\n\n  update() {\n    this.cannons.forEach(cannon => {\n      cannon.update();\n    });\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, 800, 800);\n    this.cannons.forEach(cannon => {\n      cannon.render(this.ctx);\n    });\n    this.missiles.forEach(missile => {\n      missile.render(this.ctx);\n    });\n\n    // setInterval(Missile.render(ctx), 1);\n  }\n\n  loop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(this.loop);\n  }\n}\nnew Game;\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   const canvas = document.getElementById('myCanvas');\n//   const ctx = canvas.getContext('2d');\n//   let shellRadius = 1;\n//   let shellMax = 100;\n//   // var x = canvas.width/2;\n//   // var y = canvas.height-100;\n//   var dr = 1;\n//   let startrocketx = 0;\n//   let startrockety = 0;\n//   let endrocketx = (canvas.width/2);\n//   let endrockety = canvas.height;\n//   var dx = 1;\n//   var dy = 1;\n\n  // function draw(x,y){\n  //   ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //   ctx.beginPath();\n  //   ctx.arc(x,y,shellRadius,0,Math.PI*2, false);\n  //   ctx.strokeStyle = 'black';\n  //   ctx.stroke();\n  //   ctx.closePath();\n  //   if (shellRadius + dr < shellMax) {\n  //   } else if (shellRadius + dr >= shellMax) {\n  //     dr = -dr;\n  //   }\n  //\n  //   shellRadius += dr;\n  // }\n\n// Randomize start x and end x to make incoming missiles.\n//   function drawRocket() {\n//     let xdif = endrocketx - startrocketx;\n//     let ydif = endrockety - startrockety;\n//     ctx.moveTo(startrocketx, startrockety);\n//     // Set endpoint to 1/100th of the distance to canvas height, to animate drawing of line.\n//     ctx.lineTo(startrocketx+xdif/100, startrockety+ydif/100);\n//     ctx.stroke();\n//     // if canvas height not reached, then increment both x and y\n//     if (startrockety + ydif/100 < canvas.height) {\n//       startrockety += ydif/100;\n//       startrocketx += xdif/100;\n//     }\n//   }\n//\n//   canvas.addEventListener('click', launchShell, false);\n//   function launchShell(e) {\n//     var relativeX = e.clientX - canvas.offsetLeft;\n//     var relativeY = e.clientY - canvas.offsetTop;\n//     // draw(relativeX,relativeY);\n//   }\n//\n//   // setInterval(draw, 1);\n//   // setInterval(drawRocket, 1);\n// });\n\n\n// Create collision engine calculating for a square at first\n// as doing so for a circle would require trig.\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class Missile {\n  constructor(position) {\n    this.startrocketx = position['x'];\n    this.startrockety = position['y'];\n    this.shellRadius = 30;\n    this.shellMax = 100;\n    this.dr = 3;\n  }\n\n  render(ctx) {\n    // have to set a loop here somehow, otherwise it draws one point.\n    ctx.beginPath();\n    ctx.arc(this.startrocketx,this.startrockety,this.shellRadius,0,Math.PI*2, false);\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.closePath();\n    if (this.shellRadius + this.dr >= this.shellMax) {\n      this.dr = -this.dr;\n    }\n    if (this.shellRadius + this.dr > 0) {\n      this.shellRadius += this.dr;\n    }\n  }\n}\n\nexport default Missile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/missile.js\n// module id = 1\n// module chunks = 0","class Cannon {\n  constructor(canvas) {\n    // Cannon comes from random x value at start and finishes at random x value.\n    this.startX = canvas.width * Math.random();\n    this.startY = 0;\n    let endX = canvas.width * Math.random();\n    let endY = canvas.height;\n    this.xdif = endX - this.startX;\n    this.ydif = endY - this.startY;\n    this.currentX = this.startX;\n    this.currentY = this.startY;\n    this.canvas = canvas;\n  }\n\n\n\n  update() {\n    this.currentX += this.xdif/100;\n    this.currentY += this.ydif/100;\n  }\n\n  render(ctx) {\n    ctx.moveTo(this.startX, this.startY);\n    ctx.lineTo(this.currentX, this.currentY);\n    // Set endpoint to 1/100th of the distance to canvas height, to animate drawing of line.\n    // ctx.lineTo(this.startrocketx+xdif/100, this.startrockety+ydif/100);\n    ctx.stroke();\n    // // if canvas height not reached, then increment both x and y\n    // if (this.startrockety + ydif/100 < this.canvas.height) {\n    //   this.startrockety += ydif/100;\n    //   this.startrocketx += xdif/100;\n    // }\n  }\n}\n\n\nexport default Cannon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cannon.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}