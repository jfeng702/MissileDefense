{"version":3,"sources":["webpack:///webpack/bootstrap c3f02a9b095e7e3ddf01","webpack:///./lib/game.js","webpack:///./lib/missile.js","webpack:///./lib/cannon.js","webpack:///./lib/audio.js","webpack:///./lib/buffer.js","webpack:///./lib/sound.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D,8BAA8B;AAC9B,qDAAqD;AACrD,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD;AACA,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD,oFAAkC,eAAe;AACjD;AACA,oFAAkC,eAAe;AACjD,qFAAmC,eAAe;AAClD,qFAAmC,eAAe;AAClD,qFAAmC,eAAe;AAClD;AACA,qFAAmC,eAAe;AAClD,qFAAmC,eAAe;AAClD,qFAAmC,eAAe;AAClD,qFAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iFAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3f02a9b095e7e3ddf01","import Missile from './missile';\nimport Cannon from './cannon';\nimport Audio from './audio';\nimport Buffer from './buffer';\nimport Sound from './sound';\n// Set up onClick event to the draw circle function.\nclass Game {\n  constructor() {\n    this.canvas = document.getElementById('myCanvas');\n    this.sound = document.getElementById('track');\n    this.mouseClickHandler = this.mouseClickHandler.bind(this);\n    this.missileBarrage = this.missileBarrage.bind(this);\n    document.addEventListener(\"keydown\", this.missileBarrage, false);\n    this.keyEventHandler = this.keyEventHandler.bind(this);\n    document.addEventListener(\"keydown\", this.keyEventHandler, false);\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    document.addEventListener('mousemove', this.mouseMoveHandler, false);\n    this.canvas.onclick = this.mouseClickHandler;\n    // document.addEventListener('load', this.loadSound('http://res.cloudinary.com/slicecloud/video/upload/v1518754934/laser_rlz3ww.mp3'), false);\n    this.ctx = this.canvas.getContext('2d');\n    this.render = this.render.bind(this);\n    this.loop = this.loop.bind(this);\n    this.cannonWave = this.cannonWave.bind(this);\n    this.missiles = [];\n    this.cannons = [];\n    this.startTime = new Date();\n    this.lives = 7;\n    this.barrageCount = 3;\n    this.intro();\n    this.lastBarrageTime = new Date()-10000;\n    this.itemSound;\n\n    // this.audioContext = this.audioContext.bind(this);\n\n    this.soundBuffer;\n  }\n\n\n  // loadSound(url) {\n  //   this.audioContext = new (window.AudioContext||window.webkitAudioContext)();\n  //   let audioContext = this.audioContext;\n  //   let request = new XMLHttpRequest();\n  //   request.open('GET', url, true);\n  //   request.responseType = 'arraybuffer';\n  //   request.onload = function() {\n  //     audioContext.decodeAudioData(request.response, function(buffer) {\n  //       this.soundBuffer = buffer;\n  //     }, console.log('audio error'));\n  //   };\n  //   request.send();\n  // }\n\n  playSound() {\n    // let sound = document.getElementById('laser');\n\n    let sounds = ['http://res.cloudinary.com/slicecloud/video/upload/v1518733944/Reloaded_Warez_Group_-_2012_Install_music_Mp3Converter.net_usxch8.mp3'];\n    let audioContext = new (window.AudioContext||window.webkitAudioContext)();\n\n    let buffer = new Buffer(audioContext, sounds);\n    buffer.loadAll();\n\n    let sound = new Sound(audioContext, buffer.getSoundByIndex(0));\n    sound.play();\n    // this.audioContext = new AudioContext();\n\n    // var source = this.audioContext.createMediaElementSource(sound);\n    // source.play();\n  }\n\n  // playSound(buffer) {\n  //\n  //   var source = this.audioContext.createBufferSource(); // creates a sound source\n  //   source.buffer = buffer;                    // tell the source which sound to play\n  //   source.connect(this.audioContext.destination);       // connect the source to the context's destination (the speakers)\n  //   source.start(0);                           // play the source now\n  // }\n  //\n  //\n  // pointer() {\n  //   var point = new Image();\n  //   point.src = 'images/missile.png';\n  //   this.ctx.save();\n  //   this.ctx.translate(350,720);\n  //   this.ctx.rotate(45 * Math.PI/180);\n  //   this.ctx.drawImage(point, 0,0,100,100);\n  //   this.ctx.restore();\n  // }\n\n  mouseMoveHandler(e) {\n    var relativeX = e.clientX - this.canvas.offsetLeft;\n    var relativeY = e.clientY - this.canvas.offsetTop;\n    return {x: relativeX, y: relativeY};\n  }\n\n  keyEventHandler(e) {\n    if (e.keyCode === 13) {\n      this.run();\n    } else if (e.keyCode === 77) {\n      this.playTrack('pause');\n    }\n  }\n\n  intro() {\n    this.ctx.font = \"50px Lora\";\n    this.ctx.fillStyle = 'white';\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(\"Missile Defense\", this.canvas.width/2, this.canvas.height/2);\n    this.ctx.font = \"15px Lora\";\n    this.ctx.fillText(\"We are under attack from the enemy. Use your mouse to direct anti-missile fire.\"\n    , this.canvas.width/2, this.canvas.height/2 + 50);\n    this.ctx.fillText(\"Press the up arrow key for a missile barrage.\",\n    this.canvas.width/2, this.canvas.height/2 + 75);\n    this.ctx.fillText(\"Good luck.\",\n    this.canvas.width/2, this.canvas.height/2 + 100);\n    this.ctx.font = \"20px Lora\";\n    this.ctx.fillText(\"Press Enter To Start\", this.canvas.width/2, this.canvas.height/2 + 150);\n\n  }\n\n  missileBarrage(e) {\n\n    if(e.keyCode === 38 && this.barrageCount > 0) {\n      this.barrageCount --;\n      // debugger;\n      // wave 1\n      let missile1 = new Missile({x: 100, y: 700}, this.canvas, this.ctx, 160);\n      let missile2 = new Missile({x: 300, y: 700}, this.canvas, this.ctx, 160);\n      let missile3 = new Missile({x: 500, y: 700}, this.canvas, this.ctx, 160);\n      let missile4 = new Missile({x: 700, y: 700}, this.canvas, this.ctx, 160);\n      // wave 2\n      let missile5 = new Missile({x: 100, y: 500}, this.canvas, this.ctx, 160);\n      let missile6 = new Missile({x: 300, y: 500}, this.canvas, this.ctx, 160);\n      let missile7 = new Missile({x: 500, y: 500}, this.canvas, this.ctx, 160);\n      let missile8 = new Missile({x: 700, y: 500}, this.canvas, this.ctx, 160);\n      // wave 3\n      let missile9 = new Missile({x: 100, y: 300}, this.canvas, this.ctx, 160);\n      let missile10 = new Missile({x: 300, y: 300}, this.canvas, this.ctx, 160);\n      let missile11 = new Missile({x: 500, y: 300}, this.canvas, this.ctx, 160);\n      let missile12 = new Missile({x: 700, y: 300}, this.canvas, this.ctx, 160);\n      // wave 4\n      let missile13 = new Missile({x: 100, y: 100}, this.canvas, this.ctx, 160);\n      let missile14 = new Missile({x: 300, y: 100}, this.canvas, this.ctx, 160);\n      let missile15 = new Missile({x: 500, y: 100}, this.canvas, this.ctx, 160);\n      let missile16 = new Missile({x: 700, y: 100}, this.canvas, this.ctx, 160);\n      // wave 1\n      this.missiles.push(missile1);\n      this.missiles.push(missile2);\n      this.missiles.push(missile3);\n      this.missiles.push(missile4);\n      // wave 2\n      setTimeout(() => this.missiles.push(missile5), 500);\n      setTimeout(() => this.missiles.push(missile6), 500);\n      setTimeout(() => this.missiles.push(missile7), 500);\n      setTimeout(() => this.missiles.push(missile8), 500);\n      // wave 3\n      setTimeout(() => this.missiles.push(missile9), 1000);\n      setTimeout(() => this.missiles.push(missile10), 1000);\n      setTimeout(() => this.missiles.push(missile11), 1000);\n      setTimeout(() => this.missiles.push(missile12), 1000);\n      // wave 4\n      setTimeout(() => this.missiles.push(missile13), 1500);\n      setTimeout(() => this.missiles.push(missile14), 1500);\n      setTimeout(() => this.missiles.push(missile15), 1500);\n      setTimeout(() => this.missiles.push(missile16), 1500);\n    }\n  }\n\n  drawScore() {\n    let endTime = new Date();\n    var timeDiff = endTime - this.startTime;\n    timeDiff /= 100;\n    this.ctx.font = \"16px Lora\";\n    this.ctx.fillStyle = \"#ffffcc\";\n    this.ctx.fillText(\"Score: \" + Math.round(timeDiff), 70, 30);\n    this.ctx.fillText(\"Press M to mute.\", 200, 30);\n    this.ctx.fillText(\"Barrages: \" + this.barrageCount,330,30);\n  }\n\n  playTrack(action=\"play\") {\n\n    let audioTag = document.getElementById('myAudio');\n    audioTag.play();\n    if (action === \"pause\") {\n      if (audioTag.muted) {\n        audioTag.muted = false;\n      } else {\n        audioTag.muted = true;\n      }\n    }\n  }\n\n  cannonWave() {\n    let cannon;\n    this.cannons.push(new Cannon(this.canvas));\n    let timeDiff = (new Date() - this.startTime)/100;\n    if (timeDiff > 100 && timeDiff < 200) {\n      this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n    } else if (timeDiff >= 200 && timeDiff < 400) {\n      this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n    } else if (timeDiff >= 400 && timeDiff < 600) {\n      // this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n    } else {\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n      // this.cannons.push(new Cannon(this.canvas));\n    }\n\n  }\n\n  drawLives() {\n    this.ctx.fillText(\"Lives: \" + this.lives, this.canvas.width-100, 30);\n  }\n\n  mouseClickHandler(e) {\n    let x = e.clientX - this.canvas.offsetLeft;\n    let y = e.clientY;\n    let missile = new Missile({x: x, y: y}, this.canvas, this.ctx);\n    this.missiles.push(missile);\n  }\n\n  run() {\n    this.playTrack();\n    // this.itemSound = new Sound('./audio/item.mp3');\n    setInterval(this.cannonWave, 4500);\n    this.loop();\n  }\n\n  update() {\n    this.cannons.forEach((cannon, i) => {\n      cannon.update();\n      // check whether cannon has hit the ground\n      cannon.isCollidedWith(this.missiles);\n\n      if (cannon.collided) {\n        this.cannons.splice(i,1);\n        // this.itemSound.play();\n        // this.playSound();\n      } else if (cannon.hit) {\n        this.lives -= 1;\n        this.cannons.splice(i,1);\n        if (this.lives === 0) {\n          alert('Game Over');\n          document.location.reload();\n        }\n      }\n    });\n\n    this.missiles.forEach(missile => {\n      missile.update();\n    });\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, 800, 800);\n    this.cannons.forEach(cannon => {\n      cannon.render(this.ctx);\n    });\n    this.missiles.forEach(missile => {\n      missile.render(this.ctx);\n    });\n    this.drawScore();\n    this.drawLives();\n    // this.pointer();\n    // setInterval(Missile.render(ctx), 1);\n  }\n\n  loop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(this.loop);\n  }\n}\nnew Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class Missile {\n  constructor(position, canvas, ctx, shellMax = 50) {\n    this.startrocketx = position['x'];\n    this.startrockety = position['y'];\n    this.shellRadius = 30;\n    this.shellMax = shellMax;\n    this.dr = 2;\n    this.pos = {x: this.startrocketx, y: this.startrockety};\n    this.collided = false;\n    this.canvas = canvas;\n    this.currentX = this.canvas.width/2;\n    this.currentY = this.canvas.height;\n    this.startX = this.canvas.width / 2;\n    this.startY = this.canvas.height;\n    this.xdif = this.startrocketx - this.startX;\n    this.ydif = this.startrockety - this.startY;\n    this.exploded;\n    this.ctx = ctx;\n  }\n\n  update() {\n    // debugger;\n    // must fix this.\n    if (this.currentY > this.startrockety) {\n      this.currentX += this.xdif/40;\n      this.currentY += this.ydif/40;\n    } else {\n      this.exploded = true;\n    }\n    this.pos = {x: this.currentX, y: this.currentY};\n  }\n\n  render() {\n    // have to set a loop here somehow, otherwise it draws one point.\n    if (!this.exploded) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.canvas.width/2, this.canvas.height);\n      this.ctx.lineTo(this.currentX, this.currentY);\n      this.ctx.strokeStyle = 'yellow';\n      this.ctx.stroke();\n      this.ctx.closePath();\n    } else {\n      this.renderCircle(this.ctx);\n    }\n  }\n\n  renderCircle() {\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.startrocketx,this.startrockety,this.shellRadius,0,Math.PI*2, false);\n    this.ctx.strokeStyle = 'orange';\n    this.ctx.stroke();\n    this.ctx.closePath();\n    if (this.shellRadius + this.dr >= this.shellMax) {\n      this.dr = -this.dr;\n    }\n    if (this.shellRadius + this.dr > 0) {\n      this.shellRadius += this.dr;\n    } else {\n      this.shellRadius = 0;\n    }\n  }\n}\n\nexport default Missile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/missile.js\n// module id = 1\n// module chunks = 0","class Cannon {\n  constructor(canvas) {\n    // Cannon comes from random x value at start and finishes at random x value.\n    this.startX = canvas.width * Math.random();\n    this.startY = 0;\n    let endX = canvas.width * Math.random();\n    let endY = canvas.height;\n    this.xdif = endX - this.startX;\n    this.ydif = endY - this.startY;\n    this.currentX = this.startX;\n    this.currentY = this.startY;\n    this.canvas = canvas;\n    this.pos = {x: this.currentX, y: this.currentY};\n    this.collided = false;\n    this.hit = false;\n  }\n\n  isCollidedWith(missiles) {\n    missiles.forEach( missile => {\n      // debugger;\n      if ((Math.pow(this.pos['x']-missile.pos['x'], 2)\n      + Math.pow(this.pos['y'] - missile.pos['y'], 2) <= Math.pow(missile.shellRadius,2))) {\n        this.collided = true;\n        // debugger;\n      }\n    });\n  }\n\n  isHit() {\n    if (this.pos['y'] >= this.canvas.height) {\n      this.hit = true;\n    }\n  }\n\n  update() {\n    // debugger;\n    this.currentX += this.xdif/600;\n    this.currentY += this.ydif/600;\n    this.pos = {x: this.currentX, y: this.currentY};\n    this.isHit();\n  }\n\n  render(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.startX, this.startY);\n    ctx.lineTo(this.currentX, this.currentY);\n    ctx.strokeStyle = 'red';\n    ctx.stroke();\n    ctx.closePath();\n\n  }\n}\n\n\nexport default Cannon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cannon.js\n// module id = 2\n// module chunks = 0","class Sound {\n  constructor(src) {\n    this.sound = document.createElement('audio');\n    this.sound.src = src;\n    document.body.appendChild(this.sound);\n    this.play = function(){\n      this.sound.play();\n    };\n    this.stop = function(){\n      this.sound.pause();\n    };\n  }\n}\n\nexport default Sound;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/audio.js\n// module id = 3\n// module chunks = 0","class Buffer {\n\n  constructor(context, urls) {\n    this.context = context;\n    this.urls = urls;\n    this.buffer = [];\n  }\n\n  loadSound(url, index) {\n    let request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    let thisBuffer = this;\n    request.onload = function() {\n      thisBuffer.context.decodeAudioData(request.response, function(buffer) {\n        thisBuffer.buffer[index] = buffer;\n        // updateProgress(thisBuffer.urls.length);\n        if(index == thisBuffer.urls.length-1) {\n          thisBuffer.loaded();\n        }\n      });\n    };\n    request.send();\n  }\n\n  loadAll() {\n    this.urls.forEach((url, index) => {\n      this.loadSound(url, index);\n    });\n  }\n\n  loaded() {\n    // what happens when all the files are loaded\n  }\n\n  getSoundByIndex(index) {\n    return this.buffer[index];\n  }\n\n}\n\nexport default Buffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/buffer.js\n// module id = 4\n// module chunks = 0","class Sound {\n\n  constructor(context, buffer) {\n    this.context = context;\n    this.buffer = buffer;\n  }\n\n  init() {\n    this.gainNode = this.context.createGain();\n    this.source = this.context.createBufferSource();\n    this.source.buffer = this.buffer;\n    this.source.connect(this.gainNode);\n    this.gainNode.connect(this.context.destination);\n  }\n\n  play() {\n    this.init();\n    this.source.start(this.context.currentTime);\n  }\n\n  stop() {\n    this.gainNode.gain.exponentialRampToValueAtTime(0.001, this.context.currentTime + 0.5);\n    this.source.stop(this.context.currentTime + 0.5);\n  }\n\n}\n\nexport default Sound;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sound.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}