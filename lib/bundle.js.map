{"version":3,"sources":["webpack:///webpack/bootstrap e7da8e7ebbad187f7872","webpack:///./lib/game.js","webpack:///./lib/missile.js","webpack:///./lib/cannon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iFAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;;;AAIA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e7da8e7ebbad187f7872","import Missile from './missile';\nimport Cannon from './cannon';\n// Set up onClick event to the draw circle function.\nclass Game {\n  constructor() {\n    this.canvas = document.getElementById('myCanvas');\n    this.sound = document.getElementsByClassName('track');\n    this.mouseClickHandler = this.mouseClickHandler.bind(this);\n    this.canvas.onclick = this.mouseClickHandler;\n    this.ctx = this.canvas.getContext('2d');\n    this.render = this.render.bind(this);\n    this.loop = this.loop.bind(this);\n    this.cannonWave = this.cannonWave.bind(this);\n    this.missiles = [];\n    this.cannons = [];\n    this.run();\n    this.startTime = new Date();\n    this.lives = 7;\n    this.myGamePiece;\n    this.myObstacles = [];\n    this.mySound;\n    this.myMusic;\n  }\n\n  drawScore() {\n    let endTime = new Date();\n    var timeDiff = endTime - this.startTime;\n    timeDiff /= 100;\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fillText(\"Score: \" + Math.round(timeDiff), 30, 30);\n  }\n\n  cannonWave() {\n    let cannon;\n    this.cannons.push(new Cannon(this.canvas));\n    let timeDiff = (new Date() - this.startTime)/100;\n    if (timeDiff > 0 && timeDiff < 200) {\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n    } else if (timeDiff >= 200 && timeDiff < 400) {\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n    } else if (timeDiff >= 400) {\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n      this.cannons.push(new Cannon(this.canvas));\n    }\n\n  }\n\n  drawLives() {\n    this.ctx.fillText(\"Lives: \" + this.lives, this.canvas.width-100, 30);\n  }\n\n\n  mouseClickHandler(e) {\n    let x = e.clientX - this.canvas.offsetLeft;\n    let y = e.clientY;\n    let missile = new Missile({x: x, y: y}, this.canvas, this.ctx);\n    this.missiles.push(missile);\n  }\n\n  run() {\n    let cannon = new Cannon(this.canvas);\n    this.cannons.push(cannon);\n    this.cannons.push(new Cannon(this.canvas));\n    this.cannons.push(new Cannon(this.canvas));\n\n    setInterval(this.cannonWave, 6000);\n    // let missile = new Missile;\n    // this.missiles.push(missile);\n    this.loop();\n  }\n\n\n  update() {\n    this.cannons.forEach((cannon, i) => {\n      cannon.update();\n      // check whether cannon has hit the ground\n      cannon.isCollidedWith(this.missiles);\n      if (cannon.collided) {\n        this.cannons.splice(i,1);\n      } else if (cannon.hit) {\n        this.lives -= 1;\n        this.cannons.splice(i,1);\n        if (this.lives === 0) {\n          alert('Game Over');\n          document.location.reload();\n        }\n      }\n    });\n\n    this.missiles.forEach(missile => {\n      missile.update();\n    });\n  }\n\n\n\n  render() {\n    this.ctx.clearRect(0, 0, 800, 800);\n    this.cannons.forEach(cannon => {\n      cannon.render(this.ctx);\n    });\n    this.missiles.forEach(missile => {\n      missile.render(this.ctx);\n    });\n    this.drawScore();\n    this.drawLives();\n\n    // setInterval(Missile.render(ctx), 1);\n  }\n\n  loop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(this.loop);\n  }\n}\nnew Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class Missile {\n  constructor(position, canvas, ctx) {\n    this.startrocketx = position['x'];\n    this.startrockety = position['y'];\n    this.shellRadius = 30;\n    this.shellMax = 100;\n    this.dr = 2;\n    this.pos = {x: this.startrocketx, y: this.startrockety};\n    this.collided = false;\n    this.canvas = canvas;\n    this.currentX = this.canvas.width/2;\n    this.currentY = this.canvas.height;\n    this.startX = this.canvas.width / 2;\n    this.startY = this.canvas.height;\n    this.xdif = this.startrocketx - this.startX;\n    this.ydif = this.startrockety - this.startY;\n    this.exploded;\n    this.ctx = ctx;\n  }\n\n  update() {\n    // debugger;\n    // must fix this.\n    if (this.currentY > this.startrockety) {\n      this.currentX += this.xdif/40;\n      this.currentY += this.ydif/40;\n    } else {\n      this.exploded = true;\n    }\n    this.pos = {x: this.currentX, y: this.currentY};\n  }\n\n  render() {\n    // have to set a loop here somehow, otherwise it draws one point.\n    if (!this.exploded) {\n      this.ctx.moveTo(this.canvas.width/2, this.canvas.height);\n      this.ctx.lineTo(this.currentX, this.currentY);\n      this.ctx.stroke();\n    } else {\n      this.renderCircle(this.ctx);\n    }\n  }\n\n  renderCircle() {\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.startrocketx,this.startrockety,this.shellRadius,0,Math.PI*2, false);\n    this.ctx.strokeStyle = 'black';\n    this.ctx.stroke();\n    this.ctx.closePath();\n    if (this.shellRadius + this.dr >= this.shellMax) {\n      this.dr = -this.dr;\n    }\n    if (this.shellRadius + this.dr > 0) {\n      this.shellRadius += this.dr;\n    } else {\n      this.shellRadius = 0;\n    }\n  }\n}\n\nexport default Missile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/missile.js\n// module id = 1\n// module chunks = 0","class Cannon {\n  constructor(canvas) {\n    // Cannon comes from random x value at start and finishes at random x value.\n    this.startX = canvas.width * Math.random();\n    this.startY = 0;\n    let endX = canvas.width * Math.random();\n    let endY = canvas.height;\n    this.xdif = endX - this.startX;\n    this.ydif = endY - this.startY;\n    this.currentX = this.startX;\n    this.currentY = this.startY;\n    this.canvas = canvas;\n    this.pos = {x: this.currentX, y: this.currentY};\n    this.collided = false;\n    this.hit = false;\n  }\n\n  isCollidedWith(missiles) {\n    missiles.forEach( missile => {\n      // debugger;\n      if ((Math.pow(this.pos['x']-missile.pos['x'], 2)\n      + Math.pow(this.pos['y'] - missile.pos['y'], 2) <= Math.pow(missile.shellRadius,2))) {\n        console.log('collision');\n        this.collided = true;\n        // debugger;\n      }\n    });\n  }\n\n  isHit() {\n    if (this.pos['y'] >= this.canvas.height) {\n      this.hit = true;\n    }\n  }\n\n  update() {\n    // debugger;\n    this.currentX += this.xdif/450;\n    this.currentY += this.ydif/450;\n    this.pos = {x: this.currentX, y: this.currentY};\n    this.isHit();\n  }\n\n  render(ctx) {\n    ctx.moveTo(this.startX, this.startY);\n    ctx.lineTo(this.currentX, this.currentY);\n    ctx.stroke();\n\n  }\n}\n\n\nexport default Cannon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cannon.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}